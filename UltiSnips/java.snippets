priority 0

###########################################################################
#                         Uesr TextMate Snippets                          #
###########################################################################

snippet or "@Override"
@Override
endsnippet

## Iteration
# for
snippet for "for loop (for)"
for (${2:i} = ${3:0}; $2 < ${1:count}; ${4:++$2}) {
	${VISUAL}${0}
}
endsnippet
# fori
snippet fori "fori loop (for)"
for (int ${2:i} = ${3:0}; $2 < ${1:count}; ${4:++$2}) {
	${VISUAL}${0}
}
endsnippet
# while
snippet wh
while (${1:/* condition */}) {
	${2}
}
endsnippet
# do... while
snippet do
do {
	${2}
} while (${1:/* condition */});
endsnippet

## Control Statements
# if
snippet if
if (${1:true}) {
	${0}
}
endsnippet
snippet ife
if (${1:true}) {
	${2}
} else {
	${0}
}
endsnippet
# else
snippet el
else {
	${0}
}
endsnippet
# else if
snippet elif
else if (${1:true}) {
	${0}
}
endsnippet
# ifi
snippet ifi
if (${1:true}) ${0};
endsnippet
# ternary
snippet t
${1:/* condition */} ? ${2:a} : ${3:b}
endsnippet
# switch
snippet switch
switch (${1:/* variable */}) {
	case ${2:/* variable case */}:
		${3}
		${4:break;}${5}
	default:
		${6}
}
endsnippet
# switch without default
snippet switchndef
switch (${1:/* variable */}) {
	case ${2:/* variable case */}:
		${3}
		${4:break;}${5}
}
endsnippet
# case
snippet case
case ${1:/* variable case */}:
	${2}
	${3:break;}
endsnippet
snippet ret
return ${0};
endsnippet

## Exception Handling
snippet try "try/catch" b
try {
	${4}
} catch(${1:Exception} ${2:e}){
	${3:e.printStackTrace();}
}
endsnippet
snippet tryf
try {
	${4}
} catch(${1:Exception} ${2:e}) {
	${3:e.printStackTrace();}
} finally {
}
endsnippet
snippet ca
catch(${1:Exception} ${2:e}) {
	${0:e.printStackTrace();}
}
endsnippet
